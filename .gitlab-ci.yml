build_emscripten:
  stage: build
  tags:
    - docker
  image: trzeci/emscripten:1.39.10-upstream
  script:
    - pushd emscripten
    - ./buildToolkit -DHP
    - ls build
    - popd
    - git archive $(git rev-parse HEAD) -o verovio.tar.gz
    - ls emscripten/build/verovio-toolkit.js
  artifacts:
    paths:
      - emscripten/build/verovio-toolkit.js
      - LICENSE.txt
      - verovio.tar.gz
  cache:
    key: '1.39.10'
    paths:
      - emscripten/data
      - emscripten/build

build_cmake:
  stage: build
  tags:
    - docker
  image: buildpack-deps:stable-scm
  before_script:
    - (apt-get update || apt-get update) && apt-get install -y git cmake build-essential
  script:
    - pushd tools
    - cmake ../cmake && make
    - popd
    - ls tools/verovio
  artifacts:
    paths:
      - data
      - tools/verovio
  cache:
    paths:
      - tools/CMakeCache.txt
      - tools/CMakeFiles
      - tools/Makefile
      - tools/cmake_install.cmake
      - tools/install_manifest.txt

build_c_library_musl:
  stage: build
  tags:
    - docker
  image: alpine:latest
  before_script:
    - apk add git cmake make gcc g++ musl-dev libc6-compat
  script:
    - cd tools
    - cmake -DBUILD_AS_LIBRARY=ON ../cmake
    - make
  artifacts:
    paths:
      - data
      - tools/libverovio.so
      - tools/c_wrapper.h

test_c_library_musl:
  stage: test
  dependencies:
    - build_c_library_musl
  tags:
    - docker
  image: alpine:latest
  before_script:
    - apk add gcc musl-dev libc6-compat
  script:
    - cd bindings/c
    - gcc main.c -o main -L../../tools -lverovio
    - LD_LIBRARY_PATH=../../tools ./main
